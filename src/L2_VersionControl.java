public class L2_VersionControl {

            /*
        система контроля версий позволяет
            - хранить код и его историю
            - совместная разработка

        SVN - централизованная, нужно по очереди вносить изменения, но зато надежная, ничего не ломается

        Git          распределенные контроля версий
        Mercurial    каждая история хранится у разработчика

        Git - популярнеее меркуриал, но с теми же возможностями
        Гит - автор Линус Торвацс, автор линукса (хранит линукс)

        Меркуриал - хранит джава

        Git
        Сайт github.com (принадлежит майкрософт) - хранилище репозиториев

        1) Устаночить гит git-scm.com
        64 bit - git for portable

        Как пользоваться
            1) командная строка - сложно, но можно. иногда без нее ничего не сделать
            2) хороший клиент етсь в идее, есть надежда, что можем все сделать в ней
            3) Самый популярный графический что-то там - TortoiseGit


        Репозиторий
        Есть у папки версия1 - папка, с которой начали создавать папку, может быть даже пустой
        Вносим изменения, например, добавили файл
        дали команду "создай мне еще одну версию моей папки"
        репозиторий - содержимое папки с историей

        Пусть у нас есть на гитхабе репозиторий
        мы можем:
            1) клонировать (загрузить себе репозиторий из другого места) clone
            2) изменения
                        - add       - добавить файл
                        - remove    - удалить
                                    - изменить содержимое, после нужно сказать add
                        - commit    - создание новой версии

            push - протолкнуть свои ревизии (папки) на гитхаб или в другой компьютер

            т.е. мы скачиваем, создаем свои версии, а потом пушим обратно

            pull - абрать ревизии из другого репозитория

            ветка - указатель на ревизию. реозиторий может быть не всегда линейным
            например, чото сделали с ноутбука и с компа - и все, две головы

            мастер - ваша ветка
            оригин мастер - ветка мастер
            но на компьютере оригин

            для каждой новой возможности создать ветку
*/
}
