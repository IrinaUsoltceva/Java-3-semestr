package fractali;

public class T9_Fractali {

    /*
    надо четко определить момент когда появляется картинка

    1!

    Image createFractelImagge (x0 y0 dx fractal palette width height) {
    //где width height - размер в пикселях
    выносим в отдельную функкцию весь код по генерации фрактала

    }

    2!
    у нас на panel ImageView
    надо сделать так, чтобы изменение размеров панели приведет к пересчету картинки

    1) если width height = 0 => не надо картинку
    2) не пересчитывать ВСЕ при изменении размера, а только новые пиксели

    3!
    движение
    с клавиатуры стрелочки - слушателя на Stage
    двигать на 1/4 экрана или фиксированноге количество пикселей

    как сдвинуть на 100 px
    x +-= 100 * dx

    события мыши на panel
    - press(down) - запоминает, где нажали x1 y1
    - release(up) - запомнить, где отпустили x2 y2

    x0 = +-= (x2 - x1)dx
    y0 = +-= (y2 - y1)dx
    но надо самим понять, + или -

    при движении двигать Image без пересчета

    4!
    приблизить / отдалить с клавиатуры

    dx *= 1,5 (или 1,3) отдалить
    dx \= 1.5 (или там 1,3) приблизить

    фрактал на экране и пиксели
    сделали "приблизить" - сделали дх меньше

    фрактал уедет в правый нижний угол, тк приближает к верхнему левому углу
    чтобы приближаолсь по центру, надо еще пересчитать x0 и y0

    чтобы приблизить по центру dx -> dx / a
    где а - скорость приближения

    y0          w
  x0-------------------
    |   | <- это        |
    |--- ---------      |
    | ^ |         |     | h
    |это|         |     |
    |    ---------      |
    |-------------------

    x0 += w/2 (dx - dx1)
    y0 -= h/2 (dx - dx1)

    5!
    сделать палитру из как можно большего числа цветов
    и тогда можно будет красиво сглаживать

     */
}
